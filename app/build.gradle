plugins {
    id 'com.android.application'
    id 'kotlin-android'

    // for navigation arguments
    id 'androidx.navigation.safeargs.kotlin'
    // maps
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    // parcelize
    id 'kotlin-parcelize'

}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    signingConfigs {
        file(rootProject.file('key.properties')).with { propFile ->
            if (propFile.canRead()){
                release {
                    storeFile file(keystoreProperties['storeFile'])
                    storePassword keystoreProperties['storePassword']
                    keyAlias keystoreProperties['keyAlias']
                    keyPassword keystoreProperties['keyPassword']
                }
            } else {
                print('not signed')
            }
        }
    }

    defaultConfig {
        applicationId "com.ridecell.ridecelldemo"
        flavorDimensions "default"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        resConfigs "en" //Any resources for languages not specified are removed.
        dexOptions {
            javaMaxHeapSize "2g"
            jumboMode true
        }
        lintOptions {
            // Don't change this to false
            abortOnError true
            lintConfig file("lint.xml")
            disable "ResourceType"
            disable 'ContentDescription'
            // if true, only report errors
//            ignoreWarnings true
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    productFlavors {
        production {
            // you can set configuration for production here
            dimension "default"
        }
        developer {
            // you can set configuration for developer here
            dimension "default"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled false

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources false

            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true
            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            file(rootProject.file('key.properties')).with { propFile ->
                if (propFile.canRead()) {
                    // because we can read the keystore
                    // we are building locally
                    // so sign locally
                    // otherwise build an unsigned apk for later signing by the CI/CD provider
                    signingConfig signingConfigs.release
                }
            }
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // network & communication related libraries
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:5.0.0-alpha.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'
    // reactive extensions for android
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    // Utilities for Maps SDK for Android (requires Google Play Services)
    implementation 'com.google.maps.android:android-maps-utils:2.2.5'
}